/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stadiumbookingsystem;

import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import library.databaseSQL;
import library.hashing;
import objects.account;

/**
 *
 * @author kimia
 */
public class CreateAccount extends javax.swing.JFrame {

    /**
     * Creates new form CreateAccount
     */
    public CreateAccount() {
        initComponents();
        CompletionError.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        FirstNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        LastNameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        PasswordError = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        AddressOneField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        AddressTwoField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        CityField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        PostCodeField = new javax.swing.JTextField();
        PhoneNumberError = new javax.swing.JLabel();
        PostCodeError = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        EmailError = new javax.swing.JLabel();
        PhoneNumberField = new javax.swing.JTextField();
        CompletionError = new javax.swing.JLabel();
        CreateAccountButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stadiumbookingsystem/BaseLogo.PNG"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("First Name:");

        FirstNameField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Last Name:");

        LastNameField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Email:");

        EmailField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Password:");

        PasswordField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        PasswordError.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        PasswordError.setText("Password must be at between 8 & 16 characters long and include a number.");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Phone Number:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Address Line One:");

        AddressOneField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Address Line Two:");

        AddressTwoField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("City/Town:");

        CityField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Post Code:");

        PostCodeField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        PhoneNumberError.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        PhoneNumberError.setText("Please enter a valid phone number in the format 00000 000000.");

        PostCodeError.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        PostCodeError.setText("Please enter a valid UK post code in the format AA1 1AA.");

        BackButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        BackButton.setText("Back");

        EmailError.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        EmailError.setText("Please enter a valid email, for example: ex@example.com.");

        PhoneNumberField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        CompletionError.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        CompletionError.setForeground(new java.awt.Color(255, 0, 0));
        CompletionError.setText("Please fill in every box with valid details.");

        CreateAccountButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CreateAccountButton.setText("Create");
        CreateAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(BackButton)
                            .addGap(39, 39, 39)
                            .addComponent(CompletionError, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreateAccountButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(143, 143, 143)
                                .addComponent(PostCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(215, 215, 215)
                                    .addComponent(CityField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(PhoneNumberError, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(PhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(131, 131, 131)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(PasswordError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(98, 98, 98)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(AddressTwoField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AddressOneField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addComponent(PostCodeError, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailError, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(FirstNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EmailError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PhoneNumberError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddressOneField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddressTwoField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PostCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PostCodeError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BackButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CompletionError)
                        .addComponent(CreateAccountButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAccountButtonActionPerformed
        //checking the user's details are valid
        //checking users firstname
        String userFN = FirstNameField.getText();
        boolean fn = false;
        if (userFN.length() >= 2 && userFN.length() < 20) {
            //first name is of reasonable length
            fn = true;
        } else {
            fn = false;
        }
        
        //checking users surname
        String userLN = LastNameField.getText();
        boolean ln = false;
        if (userFN.length() >= 2 && userFN.length() < 22) {
            //last name is of reasonable length
            ln = true;
        } else {
            ln = false;
        }
        
        //checking the users email
        String userEmail = EmailField.getText();
        boolean email = false;
        //regular expression for checking email is valid by looking for characters such as '@' and checking the ending is realistic (e.g. '.com')
        Pattern rep = Pattern.compile("^[0-9a-zA-Z]+([0-9a-zA-Z]*[-._+])*[0-9a-zA-Z]+@[0-9a-zA-Z]+([-.][0-9a-zA-Z]+)*([0-9a-zA-Z]*[.])[a-zA-Z]{2,6}$");
        Matcher m = rep.matcher(userEmail); //checks if user input is valid by comparing to regular expression limits
        if (m.matches()) { //returns true if email is valid
            EmailError.setForeground(Color.BLACK);
            email = true;
        } else {
            email = false;
            EmailError.setForeground(Color.red);//displays error message to user
        }
        
        //checking users password
        String userPassword = PasswordField.getText();
        boolean password = false;
        if (userPassword.length() >= 8 && userPassword.length() <= 16) {
            Pattern rep2 = Pattern.compile("(?=.*[0-9])(?=.*[A-Za-z]).{8,16}");
            //https://www.ocpsoft.org/tutorials/regular-expressions/password-regular-expression/
            Matcher m2 = rep2.matcher(userPassword);
            if (m2.matches()) {
                password = true;
                PasswordError.setForeground(Color.black);
            } else {
                password = false;
                PasswordError.setForeground(Color.red);
            }
        } else {
            password = false;
                PasswordError.setForeground(Color.red);
        }
        
        //checking users phone number
        String userPN = PhoneNumberField.getText();
        boolean pn;
        Pattern rep3 = Pattern.compile("^(\\+44\\s?7\\d{3}|\\(?07\\d{3}\\)?)\\s?\\d{3}\\s?\\d{3}$");
        //https://regexlib.com/(X(1)A(KrmDGblf1JAYpkRP9Oklw7ve8fCivQXgXiDpkXO098d8HEQOmj_AqWgV_Om_U01jwJ4xQTEyvMcPODty0wDg8jNC_TJ3_9iUr9
        //_AmxLFRtNDnbajUraYaYvzn6b1ZSJXToc4cTfTtItuAalvHfooE6e2yabyD5su7rnczF-FtuCHulhZNCsYtVYujdGstBx20))/REDetails.aspx?regexp_id=592
        Matcher m3 = rep3.matcher(userPN);
        if (m3.matches()) {
            pn = true;
            PhoneNumberError.setForeground(Color.black);
        } else {
            pn = false;
            PhoneNumberError.setForeground(Color.red);
        }
        
        //checking address line one
        String userA1 = AddressOneField.getText();
        boolean a1 = false;
        if (userA1.length() > 4) {
            //address is of reasonable length
            a1 = true;
        } else {
            a1 = false;
        }
        
        //checking address line one
        String userA2 = AddressTwoField.getText();
        boolean a2 = false;
        if (userA2.length() > 2) {
            //address is of reasonable length
            a2 = true;
        } else {
            a2 = false;
        }
        
        //checking city name
        String userCity = CityField.getText();
        boolean city = false;
        if (userCity.length() > 3 && userCity.length() < 20) {
            //city is of reasonable length
            city = true;
        } else {
            city = false;
        }

        //checking post code
        String userPC = PostCodeField.getText();
        boolean pc = false;
        Pattern rep4 = Pattern.compile("^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$");
        //https://en.wikipedia.org/wiki/Postcodes_in_the_United_Kingdom#Validation
        Matcher m4 = rep4.matcher(userPC);
        if (m4.matches()) {
            //post code is valid
            pc = true;
            PostCodeError.setForeground(Color.black);
        } else {
            pc = false;
            PostCodeError.setForeground(Color.red);
        }
        
        //if all values are true, create account
        if ((fn == true) && (ln == true) && (email == true) && (password == true) && (pn == true) && (a1 == true) && (a2 == true) && (city == true) && (pc == true)) {
            //getting the highest accountID value from database and adding 1 to create new primary key for new record
            int accountID = databaseSQL.getMaxAccountNumber();
            
            //hashing the password
            System.out.println("\nPassword before hashing: " + userPassword);
            String hashedPassword = hashing.hasher(userPassword);
            System.out.println("Password after hashing: " + hashedPassword);
            
            //setting default values
            String membership = "not a member";
            int stadiumCredit = 0;
            
            //create new account object to be inserted into the account table
            account na = new account(accountID, userFN, userLN, userEmail, hashedPassword, userPN, userA1, userA2, userCity, userPC, membership, stadiumCredit);
            System.out.println(na);
            
            //add to database
            databaseSQL.addNewAccount(na);
           
            //displays pop up to inform user the sign up was successful
            JOptionPane.showMessageDialog(null, "Account Made!");

            Login l = new Login(); //creates new login menu
            l.setSize(687, 500);
            l.setVisible(true);
            this.dispose(); //closes create account menu
        } else {
            //display main error message
            CompletionError.setVisible(true);
        }

        
        
    }//GEN-LAST:event_CreateAccountButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressOneField;
    private javax.swing.JTextField AddressTwoField;
    private javax.swing.JButton BackButton;
    private javax.swing.JTextField CityField;
    private javax.swing.JLabel CompletionError;
    private javax.swing.JButton CreateAccountButton;
    private javax.swing.JLabel EmailError;
    private javax.swing.JTextField EmailField;
    private javax.swing.JTextField FirstNameField;
    private javax.swing.JTextField LastNameField;
    private javax.swing.JLabel PasswordError;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PhoneNumberError;
    private javax.swing.JTextField PhoneNumberField;
    private javax.swing.JLabel PostCodeError;
    private javax.swing.JTextField PostCodeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
